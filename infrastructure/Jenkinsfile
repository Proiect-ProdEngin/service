pipeline {
    agent any
    environment {
        DOCKER_PASSWORD = credentials("docker_password")
        GITHUB_TOKEN = credentials("github_token")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }
        stage('Tag image') {
            steps {
                script {
                    // Fetch tags and get the latest tag components
                    def latestTag = sh(script: 'git fetch --tags && git tag | sort --version-sort | tail -n 1', returnStdout: true).trim()
                    def versionParts = latestTag.tokenize('.')
                    def majorVersion = versionParts[0]
                    def minorVersion = versionParts[1].toInteger() + 1
                    def patchVersion = versionParts[2]

                    // Form the new image tag
                    env.IMAGE_TAG = "${majorVersion}.${minorVersion}.${patchVersion}"

                    // Tag the repository with the new image tag
                    sh "git tag ${env.IMAGE_TAG}"
                    sh "git push https://$GITHUB_TOKEN@github.com/<username>/service.git ${env.IMAGE_TAG}"
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    sh "export IMAGE_TAG=${env.IMAGE_TAG} && docker compose up -d hello mongo"
                }
            }
        }
    }
}